% Studio: Code for generating smooth animations of caut objects and saving
% these videos as .avi files

[infiles inpath] = uigetfile('.mat','Pick simulation files','multiselect','on');
if ~iscell(infiles)
  infiles = {infiles};
end
datpath = [uigetdir(inpath,'set path for video files') filesep];

% Set parameters
%%
% Frame rate of outbound video
frate = 10;
% Degree of interpolation between frames
smooth = 100;
% Length of movie, in seconds
dur = 600;
% Length of the loop to generate images
loopct = dur * frate;
% Starting time, in simulation time
simstart = 1;
% last sim time to process
simend = simstart + loopct/smooth;
% TODO(DVB) Colormaps -- need to generate as many as there are files
% Gray is a stopgap for now
cmap = 'gray';
% TODO(DVB) Smart caxis set-up
cax = [-10 10];
% Video resolution; may require that a simulation be re-run with a bigger
% field, depending on whether the simulation ever reached the edge of the
% field
res = [540,540];

% Loop through files
for ifile = 1:numel(infiles)
  % Load simulation
  load([inpath infiles{ifile}])
  csim.show = 0;
  toshow = csim.field(simstart,:,:);
  % Check whether it needs to be extended, and if so, how
  if ~isequal(size(toshow),res);
    % rerun the simulation with field sized properly
    newf = ones(1,res(2),res(1));
    sy = size(toshow,2);
    sx = size(toshow,3);
    yoff = (res(2) - sy)/2;
    xoff = (res(1) - sx)/2;
    newf(1,yoff+1 : end - yoff, xoff+1 : end - xoff) = toshow;
    csim.field = newf;
    toshow = csim.field(1,:,:);
  end
  csim.field = toshow;
  % Video loop

    % For performance reasons, this loop will draw frames generated by
    % interpolating between sim frames by only working with two simframes
    % at a time, and generating a new set of frames when necessary 
    % If necessary, generate a new frame of the simulation

  figure('color','k','units','normalized','position',[0 0 1 1],'menubar','none',...
    'renderer','zbuffer')
  % Create videowriter object
  % Open video file
  for i = 1:(simend - simstart)
    csim.field(2,:,:) = 0;
    buff = [];
    % Buffer the interpolated frames between i and i + 1
    csim = csim.runSim;
    % Figure out what portions of the simulation don't need to be interped,
    % i.e. values that stay constant
    tointerp = find(squeeze(csim.field(2,:,:) - csim.field(1,:,:)));
    buff = interp1(csim.field(1:2,tointerp),linspace(1,2,smooth));
    
    for k = 1:smooth
      toplot = squeeze(csim.field(1,:,:));
      toplot(tointerp) = squeeze(buff(k,:));
      imagesc(log(abs(fftshift(fft2(toplot)))))
%       set(gca,'units','pixels');
%       set(gca,'position',[10 10 res(1) res(2)]);
%       set(gca,'color','k')
%       axis off
%       axis image
      pause(.1)
      caxis(cax);
      % Snag frame
    end
    csim.field(1,:,:) = csim.field(2,:,:);
    
  end
  
  
  % Save vid
end